import sys
sys.stdin = open('input.txt', 'r')

def find(now):
    global result
    r, c = now                  # now에는 (r, c)처럼 튜플임
    if maze[r][c] == 3:         # 도착지점(3) 이라면
        result = 1              # 도착할 수 있으면 1을 반환
        return                  # 함수 종료
    if (r, c) not in visited:   # 방문하지 않은 곳이면
        visited.add((r, c))     # 방문했다고 표시
    for k in range(4):          # 사방탐색 시작
        next_r = r + dr[k]      # 다음 r의 좌표
        next_c = c + dc[k]      # 다음 c의 좌표
        if next_r < 0 or next_r >= N or next_c < 0 or next_c >= N:      # 미로의 범위를 벗어남
            continue
        if maze[next_r][next_c] == 1 or (next_r, next_c) in visited:    # 다음 좌표가 벽이거나 이미 방문한 곳
            continue
        find((next_r, next_c)) 
for tc in range(10):
    N = 16  # N*N 행렬
    result = 0
    tc = int(input())
    maze = [list(map(int, input())) for _ in range(N)]
    dr = [-1, 1, 0, 0]
    dc = [0, 0, 1, -1]
    visited = set()
    for i in range(N):  # 시작점(2)의 인덱스를 찾아라
        for j in range(N):
            if maze[i][j] == 2:
                start = (i, j)  # 튜풀형태로 저장

    find(start)
    print(f'#{tc} {result}')